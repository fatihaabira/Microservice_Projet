version: '3.8'  # Use an appropriate Docker Compose version

services:
  # Service MySQl
  mysqldb:
    image: mysql:latest
    container_name: mysqldb-container
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3307:3306"

  # Service Client
  client-service:
    build: ./client-service
    container_name: client-service
    ports:
      - '8081:8081'
    expose:
      - '8081'
    environment:
      spring.datasource.url: jdbc:mysql://mysqldb:3306/clientdb?CreateDatabaseIfNotExist=true
      spring.datasource.username: root
      spring.datasource.password:
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
      SPRING_CLOUD_CONSUL_DISCOVERY_ENABLED: true
      SPRING_CLOUD_CONSUL_DISCOVERY_REGISTER: true
    restart: always
    depends_on:
      - mysqldb
      - consul
      - gateway-service
    networks:
      - microservices-network


  # Service Consul
  consul:
    image: consul:1.15.4
    container_name: consul-container
    ports:
      - "8500:8500"
    networks:
      - microservices-network

  # Service Gateway
  gateway-service:
    build: ./gateway-service
    container_name: gateway-service
    ports:
      - '8888:8888'
    expose:
      - '8888'
    environment:
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
      SPRING_CLOUD_CONSUL_DISCOVERY_ENABLED: true
      SPRING_CLOUD_CONSUL_DISCOVERY_REGISTER: true
    networks:
      - microservices-network
    depends_on:
      - consul
      - mysqldb

  # Service Salle
  salles-service:
    build: ./salle-service
    container_name: salles-service
    ports:
      - '8082:8082'
    expose:
      - '8082'
    environment:
      spring.datasource.url: jdbc:mysql://mysqldb:3306/salledb?CreateDatabaseIfNotExist=true
      spring.datasource.username: root
      spring.datasource.password:
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
      SPRING_CLOUD_CONSUL_DISCOVERY_ENABLED: true
      SPRING_CLOUD_CONSUL_DISCOVERY_REGISTER: true
    restart: always
    depends_on:
      - consul
      - gateway-service
      - mysqldb
    networks:
      - microservices-network

  # Service Reservation
  reservation-service:
    build: ./reservation-service
    container_name: reservation-service
    ports:
      - '8083:8083'
    expose:
      - '8083'
    environment:
      spring.datasource.url: jdbc:mysql://mysqldb:3306/reservationdb?CreateDatabaseIfNotExist=true
      spring.datasource.username: root
      spring.datasource.password:
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
      SPRING_CLOUD_CONSUL_DISCOVERY_ENABLED: true
      SPRING_CLOUD_CONSUL_DISCOVERY_REGISTER: true
    restart: always
    depends_on:
      - mysqldb
      - consul
      - gateway-service
    networks:
      - microservices-network

  # Service PHPMYADMIN
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - '8090:80'
    environment:
      PMA_HOST: mysqldb
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: root
    networks:
      - microservices-network

# Definition of network
networks:
  microservices-network:
    driver: bridge
